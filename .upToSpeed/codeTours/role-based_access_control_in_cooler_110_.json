{"title":"Role-Based Access Control in Cooler","id":"QGekXiEpU7E+scYWIchJDNlSX7Lal1mQA0nW6Q8thjA=","position":5,"steps":[{"type":"textOnly","description":"The **Cooler** project implements a **role-based access control** (RBAC) system to manage permissions and access to critical functions. This system is primarily based on the `OlympusRoles` contract from the `Olympus V3` framework. RBAC allows for fine-grained control over who can perform specific actions within the system, enhancing security and modularity.","title":"","id":"553"},{"type":"revealFiles","files":["Cooler/lib/olympus-v3/src/modules/ROLES/OlympusRoles.sol"],"description":"The **`OlympusRoles`** contract serves as the foundation for the **Role-Based Access Control (RBAC)** system in the Cooler project. It defines how roles are managed and checked throughout the system, enhancing security and modularity.","title":"","id":"561"},{"type":"highlight","description":"The **OlympusRoles** contract implements two core functions for role management: **`saveRole`** and **`removeRole`**. Both functions are restricted to permissioned callers. **`saveRole`** (lines 42-51) assigns a role to an address, checking for existing assignments and role validity before updating the **`hasRole`** mapping. **`removeRole`** (lines 54-60) revokes a role from an address, verifying the role exists before updating the mapping. Both functions emit events to log their actions, enhancing transparency in role management.","file":"Cooler/lib/olympus-v3/src/modules/ROLES/OlympusRoles.sol","highlight":[{"start":42,"end":60}],"title":"","id":"572"},{"type":"highlight","description":"The **`OlympusRoles`** contract implements two key functions for role validation and enforcement: **`requireRole`** and **`ensureValidRole`**. The **`requireRole`** function (line 67) checks if a caller has a specific role, reverting if they don't. The **`ensureValidRole`** function (line 72) validates the format of role identifiers, ensuring they only contain lowercase letters, underscores, or null characters. These functions work together to maintain the integrity of the role-based access control system.","file":"Cooler/lib/olympus-v3/src/modules/ROLES/OlympusRoles.sol","highlight":[{"start":67,"end":82}],"title":"","id":"569"},{"type":"highlight","description":"The `defund` function in the **Clearinghouse** contract demonstrates the use of the `onlyRole` modifier. Only accounts with the **cooler_overseer** role can call this function, which allows for the removal of funds from the **Clearinghouse**.","file":"Cooler/src/Clearinghouse.sol","highlight":[{"start":339,"end":357}],"title":"","id":"556"},{"type":"highlight","description":"The **Emergency contract** contains the `shutdown` function, which shows how the `emergency_shutdown` role is used. This function allows for the deactivation of critical system components in case of an emergency.","file":"Cooler/lib/olympus-v3/src/policies/Emergency.sol","highlight":[{"start":59,"end":63}],"title":"","id":"557"},{"type":"highlight","description":"The **`RolesAdmin`** contract manages the assignment of roles. The **`pushNewAdmin`** function demonstrates how administrative changes are handled, using the **`onlyAdmin`** modifier to restrict access.","file":"Cooler/lib/olympus-v3/src/policies/RolesAdmin.sol","highlight":[{"start":73,"end":76}],"title":"","id":"558"},{"type":"highlight","description":"The `pullNewAdmin` function completes the two-step process for changing the admin role, ensuring secure transitions of administrative power.","file":"Cooler/lib/olympus-v3/src/policies/RolesAdmin.sol","highlight":[{"start":78,"end":83}],"title":"","id":"559"},{"type":"textOnly","description":"The Cooler project implements a role-based access control system using the `OlympusRoles` contract for role management. Specific roles such as `cooler_overseer` and `emergency_shutdown` are utilized to control access to critical functions within the system. The implementation includes a two-step admin change process for administrative transitions. This **RBAC** system is designed to manage permissions and maintain the security of the Cooler lending facility.","title":"","id":"560"}]}